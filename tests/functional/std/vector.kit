function main() {
    var v: Vector[Int] = Vector.new(4);
    printf("length = %zu\n", v.length);
    printf("capacity = %zu\n", v.data.length);

    v.push(1);
    printf("length = %zu\n", v.length);
    printf("capacity = %zu\n", v.data.length);
    printf(if v.pop().isSome() then "some\n" else "none\n");
    printf("length = %zu\n", v.length);
    printf("capacity = %zu\n", v.data.length);
    printf(if v.pop().isSome() then "some\n" else "none\n");
    printf("length = %zu\n", v.length);
    printf("capacity = %zu\n", v.data.length);

    v.push(11);
    v.push(22);
    v.push(33);
    v.push(44);
    printf("length = %zu\n", v.length);
    printf("capacity = %zu\n", v.data.length);

    for i in v {
        printf("iterate: %i\n", i);
    }

    v.push(55);
    printf("length = %zu\n", v.length);
    printf("capacity = %zu\n", v.data.length);

    v.push(66);
    v.push(77);
    printf("length = %zu\n", v.length);
    printf("capacity = %zu\n", v.data.length);

    for i in v {
        printf("iterate: %i\n", i);
    }

    v.pop();
    v.pop();
    v.pop();

    printf("length = %zu\n", v.length);
    printf("capacity = %zu\n", v.data.length);

    for i in v {
        printf("iterate: %i\n", i);
    }

    printf("length = %zu\n", v.length);
    v.clear();
    printf("length after clear = %zu\n", v.length);

    v.free();

    var v2: Vector[Int] = Vector.new();
}
